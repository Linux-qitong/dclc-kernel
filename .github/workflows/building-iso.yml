name: Building Kernel ISO Package
run-name: ${{ github.actor }} Building Kernel ISO Package 🚀
on:
  workflow_dispatch:
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Building ISO
        env: 
          GUSER: ${{ secrets.GUSER }}
          PASSWORD: ${{ secrets.PASSWORD }}
          UPLOADURL: ${{ secrets.UPLOADURL }}
        run: |
          # 配置环境
          sudo apt update
          sudo apt install aria2 debootstrap neofetch python3 curl -y
          neofetch
          sudo aria2c -d /usr/bin -o pardus-chroot https://github.com/gfdgd-xi/deep-wine-runner/raw/main/pardus-chroot
          sudo chmod 777 /usr/bin/pardus-chroot
          mkdir ~/squashfs -p

          # 获取镜像
          kernel=6.3.6
          deepin15=https://cdimage.deepin.com/releases-archive/15.11/deepin-15.11-amd64.iso
          deepin20=https://cdimage.deepin.com/releases/20.9/deepin-desktop-community-20.9-amd64.iso
          deepin23=https://cdimage.deepin.com/releases/23-Beta/deepin-desktop-community-23-Beta-amd64.iso

          aria2c -x 16 -s 16 $deepin15 -d ~ -o deepin15.iso
          #aria2c -x 16 -s 16 $deepin20 -d ~ -o deepin20.iso
          #aria2c -x 16 -s 16 $deepin23 -d ~ -o deepin23.iso

          mkdir /tmp/deepin15
          mkdir /tmp/deepin20
          mkdir /tmp/deepin23
          sudo mount ~/deepin15.iso /tmp/deepin15
          #sudo mount ~/deepin20.iso /tmp/deepin20
          #sudo mount ~/deepin23.iso /tmp/deepin23

          sudo unsquashfs /tmp/deepin15/live/filesystem.squashfs
          sudo mv squashfs-root ~/deepin15
          
          #sudo unsquashfs /tmp/deepin20/live/filesystem.squashfs
          #sudo mv squashfs-root ~/deepin20
          #sudo unsquashfs /tmp/deepin23/live/filesystem.squashfs
          #sudo mv squashfs-root ~/deepin23

          ## 定制镜像
          sudo pardus-chroot ~/deepin15 
          sudo chroot ~/deepin15 apt purge linux-image* linux-hea* linux-modu* -y
          sudo chroot ~/deepin15 rm -rfv /lib/modules/*
          # 设置 DNS
          sudo chroot ~/deepin15 bash -c "echo nameserver 8.8.8.8 ./ > /etc/resolv.conf"
          sudo aria2c -d ~/deepin15/tmp http://kernel.dclc.gfdgdxi.top/sources/github.sh
          sudo chroot ~/deepin15 bash /tmp/github.sh
          sudo chroot ~/deepin15 bash -c "echo deb http://github.com/gfdgd-xi/dclc-kernel/raw/main/ ./ > /etc/apt/sources.list.d/gfdgdxi-kernel-list.list"
          sudo chroot ~/deepin15 apt update
          sudo chroot ~/deepin15 apt install linux-kernel-dclc-gfdgdxi -y
          sudo chroot ~/deepin15 bash -c "echo deb http://kernel.dclc.gfdgdxi.top/ ./ > /etc/apt/sources.list.d/gfdgdxi-kernel-list.list"
          sudo chroot ~/deepin15 apt update
          sudo chroot ~/deepin15 apt clean
          # 拷贝定制过的 lub
          sudo aria2c -d ~/deepin15/tmp http://github.com/gfdgd-xi/dclc-kernel/raw/main/lub
          sudo chmod 777 ~/deepin15/tmp/lub
          sudo chroot ~/deepin15 mkdir -p /backup
          sudo chroot ~/deepin15 bash -c "echo -e 'c\n\ny\n/backup\ny\ny\ny\n\ny\n' | /tmp/lub -b"
          sudo mv ~/deepin15/backup/*.squashfs ~/squashfs/deepin-15-$kernel-amd64.squashfs
          sudo chroot ~/deepin15 mv /boot/initrd.img-* /initrd.img-$kernel
          sudo chroot ~/deepin15 mv /boot/vmlinuz-* /vmlinuz-$kernel
          # 提交
          curl -F "file=@$HOME/deepin15/vmlinuz-$kernel" "$UPLOADURL"
          curl -F "file=@$HOME/deepin15/initrd.img-$kernel" "$UPLOADURL"
          curl -F "file=@$HOME/squashfs/deepin-15-$kernel-amd64.squashfs" "$UPLOADURL"

          exit
          # 以此类推

          #sudo debootstrap --arch amd64 buster ~/debian10-amd64
          
          sudo pardus-chroot ~/debian10-amd64
          # 编译 amd64 wine
          sudo aria2c -d ~/debian10-amd64 -o wineautobuild-action-7z.sh https://github.com/gfdgd-xi/deep-wine-runner/raw/main/wineautobuild-action-7z.sh
          git clone https://github.com/gfdgd-xi/auto-building-wine --depth=1
          sudo cp auto-building-wine/wine-version.txt ~/debian10-amd64 -rv
          sudo cp auto-building-wine/wine-url.txt ~/debian10-amd64 -rv
          sudo cp auto-building-wine/wine-type.txt ~/debian10-amd64 -rv
          sudo chroot ~/debian10-amd64 bash /wineautobuild-action-7z.sh
          # 提交wine
          # 获取数据
          url=`cat auto-building-wine/wine-url.txt`
          version=`cat auto-building-wine/wine-version.txt`
          type=`cat auto-building-wine/wine-type.txt`
          curl -F "file=@$HOME/debian10-amd64/wine/wine-$type-$version-debian10-amd64.7z" "$UPLOADURL"
          curl -F "file=@$HOME/debian10-amd64/wine/wine-$type-$version-debian10-x86_64.7z" "$UPLOADURL"
          curl -F "file=@$HOME/debian10-amd64/wine/wine-$type-$version-debian10-i386.7z" "$UPLOADURL"
      